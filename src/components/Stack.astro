---
import type { HTMLTag, Polymorphic } from "astro/types";

type Props<Tag extends HTMLTag> = Polymorphic<{
  as: Tag;
  gap: 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9;
  inline?: boolean;
  class?: string;
}>;

let { as: Tag = "div", gap, inline = false, class: class_ } = Astro.props;
---

<Tag
  class:list={["stack", `stack--gap:${gap}`, inline && `stack--inline`, class_]}
>
  <slot />
</Tag>

<style is:global>
  .stack {
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
  }

  .stack--inline {
    display: inline-flex;
  }

  .stack--gap\:1 > * + * {
    margin-block-start: var(--s1);
  }

  .stack--gap\:2 > * + * {
    margin-block-start: var(--s2);
  }

  .stack--gap\:3 > * + * {
    margin-block-start: var(--s3);
  }

  .stack--gap\:4 > * + * {
    margin-block-start: var(--s4);
  }

  .stack--gap\:5 > * + * {
    margin-block-start: var(--s5);
  }

  .stack--gap\:6 > * + * {
    margin-block-start: var(--s6);
  }

  .stack--gap\:7 > * + * {
    margin-block-start: var(--s7);
  }

  .stack--gap\:8 > * + * {
    margin-block-start: var(--s8);
  }

  .stack--gap\:9 > * + * {
    margin-block-start: var(--s9);
  }
</style>
